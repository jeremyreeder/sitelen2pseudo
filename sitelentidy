#!/usr/bin/env python3

import re
from sys import stdin
from typing import Final

class Glyph:
	LI: Final = '󱤧'
	E: Final = '󱤉'
	CARTOUCHE_OPEN: Final = '󱦐'
	CARTOUCHE_PINI: Final = '󱦑'
	SPACE: Final = ' '

def tidy(text):
	sequenceB = ""
	sequenceA = re.sub(r'(?<=[,.:]) +', '\n', text)  # no more than one sentence per line
	sequenceA = re.sub(r'^ +', '', sequenceA)  # strip extraneous whitespace from line start
	sequenceA = re.sub(r'\n{2,}', '\n', sequenceA, re.MULTILINE)  # collapse multiple newlines
	sequenceA = list(sequenceA)
	(column, li_column, e_column) = (0, 0, 0)
	is_name = False
	for glyph in sequenceA:
		if glyph == '\n':
			(column, li_column, e_column) = (-1, 0, 0)
		if glyph == Glyph.CARTOUCHE_OPEN:
			is_name = True
		if glyph == Glyph.CARTOUCHE_PINI:
			is_name = False
		if glyph == Glyph.LI and not is_name:
			if li_column > 0:
				sequenceB += ('\n' + Glyph.SPACE * li_column)
				column = li_column
			else:
				li_column = column
			e_column = 0
		else:
			if glyph == Glyph.E and not is_name:
				if e_column > 0:
					sequenceB += ('\n' + Glyph.SPACE * e_column)
					column = e_column
				else:
					e_column = column
		sequenceB += glyph
		column += 1
	return sequenceB

prior_line = '\n'
for line in stdin:
	if line != '\n' or line != prior_line:
		print(tidy(line), end="")
	prior_line = line
